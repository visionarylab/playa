@import "../../../styles/variables";
@import "../../../styles/mixins";

.search-result-list-empty-component {
	@include emptyComponent();
}

$coverWidth: 6rem;
$artistWidth: calc((100% - 6rem - 6rem - 6rem) / 3);
$titleWidth: calc((100% - 6rem - 6rem - 6rem) / 3 * 2);
$typeWidth: 6rem;
$yearWidth: 6rem;
$miniWindowRowHeight: 57px;

.search-result-list {
	padding: 0;
  overflow: auto;
	width: 100%;
	border-spacing: 0;
	border-collapse: collapse;
	@include fadeInOut();
	.td, .th {
		display: flex;
		align-items: center;
		@media (max-width: $miniWindowThreshold) {
			&.header,
			&.cell-year,
			&.cell-type {
				display: none;
			}
		}
	}
	.tr {
		display: flex;
		justify-content: space-between;
		@media (max-width: $miniWindowThreshold) {
			@include clearFix();
			display: block;
		}
	}
	.search-result-list-header {
		line-height: $mainUnit;
		color: $highlightColor;
		.tr {
			.th {
				text-align: left;
				&.header-cover {
					padding-left: .25rem;
					width: $coverWidth;
				}
				&.header-artist {
					width: $artistWidth;
				}
				&.header-title {
					width: $titleWidth;
				}
				&.header-year {
					text-align: center;
					width: $yearWidth;
				}
				&.header-type {
					text-align: center;
					width: $typeWidth;
				}
			}
		}
	}

	.tbody {
		// viewport - player - table header - title
		height: calc(100vh - 6rem - 3rem - 3rem - 1.5 * var(--section-gutter));		
		@media (max-width: $miniWindowThreshold) {
			// viewport - player - searchbar - title
			height: calc(100vh - 9rem - 3rem - 3rem - 3.5 * var(--section-gutter));
		}
	}
	.search-result-list-item {
		line-height: $mainUnit;
		border-bottom: 1px solid $backgroundLightColor;
		height: $miniWindowRowHeight;
		overflow: hidden;
		@media (max-width: $miniWindowThreshold) {
			font-size: .9rem;
		}
		&:first-of-type {
			border-top: 1px solid $backgroundLightColor;
		}
		&:hover{
			background-color: $backgroundLightColor;
			.cell.cell-cover figure {
				@include albumCover($searchResultsCoverWidth, $backgroundColor);
			}
		}
		&.is-current {
			background-color: rgba($mainColor, .1);
			transition: background-color .3s ease-in-out;
		}
		&:not(.is-current) {
			.cell-cover figure {
				@include playOverlay('../../../static/icons/album/play.svg');
			}
		}
		.cell {
			min-width: 0;
			&-cover {
				width: $coverWidth;
				padding: .25rem 0 .25rem .25rem;
				figure {
					@include albumCover($searchResultsCoverWidth);
				}
				@media (max-width: $miniWindowThreshold) {
					width: auto;
					float: left;
					margin-right: 1rem;
				}
			}
			&-artist {
				@include ellipsis();
				width: $artistWidth;
				color: $highlightColor;
				&:hover {
					text-decoration: underline;
				}
			}
			&-title {
				@include ellipsis();
				width: $titleWidth;
			}
			&-year {
				width: $yearWidth;
				text-align: center;
			}
			&-type {
				width: $typeWidth;
				text-align: center;
				padding-right: calc(var(--section-gutter) / 3);
			}
			@media (max-width: $miniWindowThreshold) {
				&-artist,
				&-title, {
					display: block;
					line-height: var(--section-gutter);
					max-width: calc(100vw - #{$searchResultsCoverWidth} - var(--section-gutter) * 2);
					width: auto;
				}
				&-artist {
					padding-top: .5rem;
				}
			}
		}
		.tag {
			@include albumTypeBackground();
			display: block;
			color: $highlightColor;
			font-size: .75rem;
			border-radius: .25rem;
			text-align: center;
			height: 2rem;
			line-height: 2rem;
			padding: 0;
			width: 100%;
		}
	}
}
